[user]
	email = 60019601+josh-signal@users.noreply.github.com
  name = Josh Perez

[github]
  user = josh-signal

[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = cyan
[color "diff"]
  meta = yellow bold
  frag = blue
  old = red
  new = green
[color "status"]
  added = green
  changed = blue
  untracked = yellow

[alias]
  br = branch
  cl = clone
  ci = commit
  cm = commit -a
  co = checkout
  dc = diff --cached
  df = diff --color
  dfst = diff --stat
  feature = !sh -c 'git checkout -b DESKTOP-$0--$(date +%s | md5 | cut -c 1-7)'
  fixup = !sh -c 'git commit --fixup=HEAD' -
  fork = !sh -c 'git remote add fork git@github.com:$0.git'
  ign = ls-files -o -i --exclude-standard
  lg = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr by %an)%Creset' --abbrev-commit --date=relative
  lgg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr by %an)%Creset' --abbrev-commit --date=relative
  msg = commit --allow-empty -m
  new = checkout -b
  nuke = reset --hard HEAD
  pl = pull origin master
  ps = push origin master
  po = push origin gh-pages
  poop = !sh -c 'git stash pop`
  ri = rebase --interactive --autosquash
  sh = stash save
  shap = !sh -c 'git stash apply stash@{$1}'
  shdf = !sh -c 'git stash show -u stash@{$1}'
  shls = stash list
  squash = !sh -c 'git add . && git fixup HEAD && git ri HEAD~2'
  st = status -s
  stage = add
  switch = checkout
  unstage = reset HEAD
  files = !git diff --name-only $(git merge-base HEAD main)
  stat = !git diff --stat $(git merge-base HEAD main)
  reviewall = !vim -p $(git files) +\"tabdo Gdiff main +\"let g:gitgutter_diff_base = 'main'\"
  review = !vim -p +\"tabdo Gdiff main\" +\"let g:gitgutter_diff_base = 'main'\"
  titles = !bash -c 'comm -3 <(git log --format="%s" $0 | sort) <(git log --format="%s" "main" | sort)'
  merge-pr = !bash -c 'gh pr checkout $0 --branch pr/$0 && git checkout main && git merge --no-ff -m "Merge signalapp/Signal-Desktop#$0" pr/$0'
  review-pr = !bash -c 'gh pr checkout $0 --branch pr/$0'

[core]
	editor = /usr/bin/vim
	excludesfile = /Users/josh_perez/.gitignore_global
	precomposeunicode = true
	sparseCheckout = true
[rerere]
	enabled = true
[push]
	default = current
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
